Robotics is a field of engineering and computer science that focuses on the creation, production, maintenance, and use of robots. Robotics aims to develop devices that can assist and benefit individuals. Mechanical engineering, mechatronics, information engineering, electronics, biotechnology, computer programming, software development, and mathematics are all part of robotics. When designing a robot, it is crucial to emphasize the testing and simulations phase, which, when combined in distinct courses, can identify potential drawbacks and errors. In terms of creating an obstacle course within a "real-world" simulation, it is vital to guarantee the existence of multiple procedure testing stages that will determine the functionality of a robot.

A robot is defined as a machine capable of automatically executing a complex series of tasks, especially those that a computer can instruct. Advanced cyber-physical technologies, such as robotics systems, typically involve both physical and software elements that are expected to evolve over time (Jamshidi et al., 2019). A remote control system can guide a robot, or the control can be integrated within the robot itself. While some robots are designed to resemble humans, most are task-focused technologies that prioritize practical utility over aesthetic appeal. Examples of autonomous and semi-autonomous robots include humanoids, industrial machines, medical surgical robots, patient support robotic systems, collaboratively programmed robots, and tiny nanorobots. By replicating a lifelike appearance or automating movements, a robot may acquire a sense of awareness or self-awareness, and autonomous devices are likely to advance in the future.

When it comes to constructing a robot, it is essential to highlight several specific construction phases that may be universally applicable. Defining a purpose for the robot is the initial step, enabling the determination of its specific capabilities, which, in turn, aids creators in establishing the required tasks. Next, deciding whether the robot will function on a manufacturing or intelligent operating system is crucial, depending on whether developers are creating an industrial or conceptual robot. Subsequently, creating the central command module of the machine, responsible for decision-making, and building a shell to provide physical attributes and functionality are important steps.

The course's purpose is to ensure the robot's ability to navigate through space, detect obstacles, and effectively overcome them. To develop an obstacle course that can assess the autonomy of basic robots, opting for a "real-world" simulation as a general design approach is feasible. In terms of a "real-world" simulation, this testing concept evaluates how effectively a robot can evade obstacles and address challenges in practical real-world situations, as depicted in Figure 1 (Pandey et al., 2019). Additionally, within this simulation, the robot's performance is evaluated and analyzed using a scoring system that gathers and organizes data. To create a specific course, it is imperative to first identify the design concept and the essential features and components of the robot to be tested.

Regarding the technical aspects and components, the robot will feature a frame, tires, engines, circuit boards, a proportional integral derivative controller, and a microprocessor enabling program execution. Since the course's design focuses on the robot's capacity to navigate real obstacles within a simulated environment, emphasizing the presence of sensor options is crucial. The robot should be equipped with a metal detector for ground object identification, ultrasonic sensors for proximity assessment, and a compass utilizing the Earth's magnetic field for directional selection. Furthermore, incorporating LED flasher technology, emitting flashing lights at varying frequencies, is essential.

As for the layout of the proposed course, it should consist of conditions and challenges for the robot's movement. It should also incorporate a feature facilitating adequate communication with receivers. Concerning specific steps and procedural descriptions for course implementation, a simulation where the robot must navigate around randomly placed objects, like a remote-controlled vehicle, can be identified. This step aids in evaluating the robot's decision-making effectiveness in situations requiring swift adjustments. Subsequently, the second step involves altering the robot's initial position in space before testing, initiating movement from different randomly selected points to avoid pattern-based behavior and ensure adaptability in diverse settings. Finally, the third step involves measuring the robot's velocity and determining the maximum speed threshold. Acceleration may heighten the risk of failure in autonomous obstacle testing.

In conclusion, a robot is a machine capable of autonomously executing complex tasks, particularly those programmable by a computer. The course's aim is to ensure the robot can traverse spaces, detect obstacles, and effectively overcome them. Utilizing a "real-world" simulation as a fundamental design approach for creating an obstacle course to assess the autonomy of basic robots is conceivable. Technological features and components of the robot include a chassis, wheels, motors, circuit boards, a proportional integral derivative controller, and a processor for program execution. The course map should feature scenarios and challenges for the robot's movement.